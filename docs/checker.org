#+TITLE: ASPRILO Checker
#+AUTHOR: Philipp Obermeier
#+INCLUDE: "./conf.org"

* About
  :PROPERTIES:
  :CUSTOM_ID: checker_about
  :END:

   This is the user manual of the solution checker of [[file:index.org][ASPRILO]].


* Encoding Structure

  The checker's encoding is compartmentalized into several parts with respect to

  1. the problem domain, i.e., all encodings related to a domain =DOMAIN= are stored in a separate
     directory =./checker/encodings/DOMAIN/=, .e.g. =./checker/encodings/default/= for the [[file:~/logistics/ASPRILO/public/asprilo/docs/specification.org::#cid:b0f981f8-3202-42c0-a46e-aa6f1a52629b][default
     domain]]


  2. the initial environmental state and the general law of inertia stored in
     =./checker/encodings/DOMAIN/init.lp=, .e.g. =./checker/encodings/default/= for the default
     domain

  3. <<laws>>the types of action laws to verify, that is,

     - /action preconditions/ and /related inertial abnormals/ stored in
       =./checker/encodings/DOMAIN/ACTION= for each action type =ACTION=, e.g. for the default
       domain's action types =move=, =pickup=, =putdown= and =deliver=, the respective encodings are
         #+BEGIN_SRC shell
           ./checker/encodings/default/action-move.lp
           ./checker/encodings/default/action-pickup.lp
           ./checker/encodings/default/action-putdown.lp
           ./checker/encodings/default/action-deliver.lp
         #+END_SRC

     - /static laws/ stored in =./checker/encodings/DOMAIN/static.lp=,
       e.g. =./checker/encodings/default/static.lp= for the default domain

  4. the goal condition stored in =./checker/encodings/DOMAIN/goal.lp=, .e.g. for the default,
     =./checker/encodings/default/=

  For each =DOMAIN=, all [[laws][action law encodings]] are then integrated via =#include= directives in the
  encoding =./checker/encodings/DOMAIN/checker.lp=, .e.g.  =./checker/encodings/default/checker.lp=
  for the default domain.


* Currently Supported Domains

  At present we support the following problem domains:
  - the [[file:~/logistics/ASPRILO/public/asprilo/docs/specification.org::#cid:b0f981f8-3202-42c0-a46e-aa6f1a52629b][default domain]]
    + checker encodings at =./checker/encodings/default/=
  - the default domain in conjunction with the [[file:~/logistics/ASPRILO/public/asprilo/docs/specification.org::#cid:49448523-5e9b-4ed2-ac1a-6754d838b85c]['disregard of product quantities' (DPQ)]] modification
    + checker encodings at =./checker/encodings/dpq=


* How To Use
  :PROPERTIES:
  :CUSTOM_ID: checker_how-to-use
  :END:

  In general, within a problem domain =DOMAIN=, to check a plan file =PLAN= for an instance file
  =INSTANCE= run

  #+BEGIN_SRC shell
    clingo ./checker/encodings/DOMAIN/checker.lp INSTANCE PLAN
  #+END_SRC

  Any inconsistencies will then be indicated by =err/3= atoms in the answer set, which are defined
  in the [[*Encoding Structure][checker's encoding files]]. Moreover, =err/3= facts adhere to the format

  #+BEGIN_SRC prolog
    err(FileID, CheckID, Parameters)
  #+END_SRC

  where
  1. =FileID= indicates the encoding file in which the yielded =err/3= atom is defined
  2. =CheckID= indicates the specific 'check', i.e., a rule that defines the =err/3= atom
  3. =Parameters= the relevant term parameters in the body of the rule


  E.g., for the default domain and instance =./examples/default/instance.asp=, the (invalid) plan
  =./examples/default/wrong_outcome.txt= can be checked via

  #+BEGIN_SRC shell
    clingo ./checker/encodings/default/checker.lp ./examples/default/instance.asp \
           ./examples/default/wrong_outcome.txt --out-ifs="\n"|grep err
  #+END_SRC

  which yields:

  #+BEGIN_SRC prolog
    err(goal,unfilledOrder,(3,3,1,11))
    err(goal,unfilledOrder,(3,2,1,11))
  #+END_SRC

  Those =err/3= facts are defined in =./checker/encodings/default/goal= by rule

  #+BEGIN_SRC prolog
    err(goal, unfilledOrder, (O, P, Q, H)) :- holds(object(order, O), value(line, (P, Q)), H);
                                              horizon(H).
  #+END_SRC
  that indicates, that there are still unfulfilled orders at the end of the plan. Specifically,
  - =err(goal,unfilledOrder,(3,3,1,11))= indicates that order =O = 3= still requires =Q = 1= units of
    product =P = 3=.
  - =err(goal,unfilledOrder,(3,2,1,11))= indicates that order =O = 3= still requires =Q = 1= units of
    product =P = 2=.
